.sf__notice {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  margin: 5px 15px 2px; }
  .sf__notice--start {
    position: relative;
    border: 0;
    border-radius: 2px;
    background: linear-gradient(180deg, #03274D 0%, #523081 100%);
    background-size: cover;
    padding: 40px 50px !important; }
    .sf__notice--start:before {
      content: "";
      display: block;
      z-index: 1;
      position: absolute;
      top: 0;
      right: 40px;
      bottom: 0;
      left: 0;
      background: url("../images/sf_notice.svg") no-repeat center right;
      pointer-events: none; }
    .sf__notice--start .sf__notice__title {
      margin-top: 0;
      color: #fff;
      font-size: 30px;
      font-weight: 600;
      margin: 0; }
    .sf__notice--start .sf__notice__subtitle {
      color: #fff;
      text-transform: uppercase;
      font-size: 12px;
      font-weight: 400;
      letter-spacing: 4px;
      line-height: 26px;
      opacity: .5;
      margin-top: 15px;
      margin-bottom: 15px; }
    .sf__notice--start .main {
      position: relative;
      z-index: 2; }
      @media screen and (min-width: 64em) {
        .sf__notice--start .main {
          padding-right: 250px; } }
    .sf__notice--start .button.action {
      color: #fff;
      text-transform: uppercase;
      border-color: #1CB69B;
      background-color: #1CB69B; }
      .sf__notice--start .button.action:hover, .sf__notice--start .button.action:active, .sf__notice--start .button.action:focus {
        color: #fff;
        border-color: #19a088;
        background-color: #19a088; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWNlLmNzcyIsInNvdXJjZXMiOlsibm90aWNlLnNjc3MiLCJtYWluL19taXhpbnMuc2NzcyIsIm1haW4vX2NvbG9ycy5zY3NzIiwibm90aWNlL19ub3RpY2Uuc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwibWFpbi9taXhpbnNcIjtcbkBpbXBvcnQgXCJtYWluL2NvbG9yc1wiO1xuQGltcG9ydCBcIm5vdGljZS9ub3RpY2VcIjtcbiIsIi8vIEJvdXJib24ncyBlc3NlbnRpYWxzIG1peGluc1xuJGVtLWJhc2U6IDE2cHggIWRlZmF1bHQ7XG4vLyBTdHJpcCB1bml0c1xuQGZ1bmN0aW9uIHN0cmlwLXVuaXRzKCR2YWx1ZSkge1xuXHRAcmV0dXJuICgkdmFsdWUgLyAoJHZhbHVlICogMCArIDEpKTtcbn1cbi8vIFBYIHRvIEVNXG5AZnVuY3Rpb24gZW0oJHB4dmFsLCAkYmFzZTogJGVtLWJhc2UpIHtcblx0QGlmIG5vdCB1bml0bGVzcygkcHh2YWwpIHtcblx0ICAkcHh2YWw6IHN0cmlwLXVuaXRzKCRweHZhbCk7XG5cdH1cblx0QGlmIG5vdCB1bml0bGVzcygkYmFzZSkge1xuXHQgICRiYXNlOiBzdHJpcC11bml0cygkYmFzZSk7XG5cdH1cblx0QHJldHVybiAoJHB4dmFsIC8gJGJhc2UpICogMWVtO1xufVxuLy9CcmVha3BvaW50c1xuJGJyZWFrcG9pbnRzOiAoXG4gICAgeHNtOiBlbSg0ODApLFxuICAgIHNtOiBlbSg3NjgpLFxuICAgIG1kOiBlbSgxMDI0KSxcbiAgICBsZzogZW0oMTI2MCksXG4gICAgeGxnOiBlbSgxNDQwKVxuKTtcblxuQG1peGluIGJyZWFrcG9pbnRzKCRicmVha3BvaW50KSB7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogbWFwLWdldCgkbWFwOiAkYnJlYWtwb2ludHMsICRrZXk6ICRicmVha3BvaW50KSkge1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG59XG4vLyBIb3ZlciBBY3RpdmUgRm9jdXMgcHNldWRvIHNlbGVjdG9yIG1peGluXG5AbWl4aW4gaG92ZXIge1xuXHQmOmhvdmVyLCAmOmFjdGl2ZSwgJjpmb2N1cyB7XG5cdFx0QGNvbnRlbnQ7XG5cdH1cbn1cbi8vIFNtb290aCB0ZXh0XG5AbWl4aW4gc21vb3RoVGV4dCB7XG5cdC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICAgIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG59IiwiJHdoaXRlOiAjZmZmO1xuJGJsYWNrOiAjMDAwO1xuJHByaW1hcnk6ICM2MzJGOEU7XG4kc2Vjb25kYXJ5OiAjMUNCNjlCO1xuJHRleHRjb2xvcjogIzIzMjgyRDtcbiRncmF5OiAjOUU5RTlFO1xuJGJsdWU6ICMwNDI3NEQ7XG4kcGluazogI0U5MUU2MztcbiIsIi5zZl9fbm90aWNlIHtcbiAgICAkcGFyZW50OiAmO1xuICAgIEBpbmNsdWRlIHNtb290aFRleHQ7XG4gICAgbWFyZ2luOiA1cHggMTVweCAycHg7XG4gICAgJi0tc3RhcnQge1xuICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgYm9yZGVyOjA7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDE4MGRlZywgIzAzMjc0RCAwJSwgIzUyMzA4MSAxMDAlKTtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgICAgcGFkZGluZzogNDBweCA1MHB4ICFpbXBvcnRhbnQ7XG4gICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6XCJcIjtcbiAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgICAgICB6LWluZGV4OjE7XG4gICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDowO1xuICAgICAgICAgICAgcmlnaHQ6NDBweDtcbiAgICAgICAgICAgIGJvdHRvbTowO1xuICAgICAgICAgICAgbGVmdDowO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogIHVybChcIi4uL2ltYWdlcy9zZl9ub3RpY2Uuc3ZnXCIpIG5vLXJlcGVhdCBjZW50ZXIgcmlnaHQ7XG4gICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICAgICAgfVxuICAgICAgICAjeyRwYXJlbnR9X190aXRsZSB7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOjA7XG4gICAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIH1cbiAgICAgICAgI3skcGFyZW50fV9fc3VidGl0bGUge1xuICAgICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOiA0cHg7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMjZweDtcbiAgICAgICAgICAgIG9wYWNpdHk6IC41O1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogMTVweDtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XG4gICAgICAgIH1cbiAgICAgICAgLy9Xb3JkUHJlc3MgY2xhc3NcbiAgICAgICAgLm1haW4ge1xuICAgICAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgICAgICB6LWluZGV4OjI7XG4gICAgICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50cyhtZCkge1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDI1MHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC5idXR0b24uYWN0aW9uIHtcbiAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgICAgIGJvcmRlci1jb2xvcjogJHNlY29uZGFyeTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmRhcnk7XG4gICAgICAgICAgICBAaW5jbHVkZSBob3ZlciB7XG4gICAgICAgICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiBkYXJrZW4oJHNlY29uZGFyeSwgNSUpO1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IGRhcmtlbigkc2Vjb25kYXJ5LCA1JSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFHQUEsQUFBQSxXQUFXLENBQUM7RUZzQ1gsc0JBQXNCLEVBQUUsV0FBVztFQUNoQyx1QkFBdUIsRUFBRSxTQUFTO0VFcENsQyxNQUFNLEVBQUUsWUFBWSxHQTBEdkI7RUF6REksQUFBRCxrQkFBUSxDQUFDO0lBQ0wsUUFBUSxFQUFDLFFBQVE7SUFDakIsTUFBTSxFQUFDLENBQUM7SUFDUixhQUFhLEVBQUUsR0FBRztJQUNsQixVQUFVLEVBQUUsaURBQWlEO0lBQzdELGVBQWUsRUFBRSxLQUFLO0lBQ3RCLE9BQU8sRUFBRSxvQkFBb0IsR0FrRGhDO0lBeERBLEFBT0csa0JBUEksQUFPSCxPQUFPLENBQUM7TUFDTCxPQUFPLEVBQUMsRUFBRTtNQUNWLE9BQU8sRUFBQyxLQUFLO01BQ2IsT0FBTyxFQUFDLENBQUM7TUFDVCxRQUFRLEVBQUMsUUFBUTtNQUNqQixHQUFHLEVBQUMsQ0FBQztNQUNMLEtBQUssRUFBQyxJQUFJO01BQ1YsTUFBTSxFQUFDLENBQUM7TUFDUixJQUFJLEVBQUMsQ0FBQztNQUNOLFVBQVUsRUFBRyw4QkFBOEIsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLEtBQUs7TUFDbEUsY0FBYyxFQUFFLElBQUksR0FDdkI7SUFsQkosQUFtQkcsa0JBbkJJLENBbUJKLGtCQUFrQixDQUFBO01BQ2QsVUFBVSxFQUFDLENBQUM7TUFDWixLQUFLLEVBQUUsSUFBSTtNQUNYLFNBQVMsRUFBRSxJQUFJO01BQ2YsV0FBVyxFQUFFLEdBQUc7TUFDaEIsTUFBTSxFQUFFLENBQUMsR0FDWjtJQXpCSixBQTBCRyxrQkExQkksQ0EwQkoscUJBQXFCLENBQUE7TUFDakIsS0FBSyxFQUFFLElBQUk7TUFDWCxjQUFjLEVBQUUsU0FBUztNQUN6QixTQUFTLEVBQUUsSUFBSTtNQUNmLFdBQVcsRUFBRSxHQUFHO01BQ2hCLGNBQWMsRUFBRSxHQUFHO01BQ25CLFdBQVcsRUFBRSxJQUFJO01BQ2pCLE9BQU8sRUFBRSxFQUFFO01BQ1gsVUFBVSxFQUFFLElBQUk7TUFDaEIsYUFBYSxFQUFFLElBQUksR0FDdEI7SUFwQ0osQUFzQ0csa0JBdENJLENBc0NKLEtBQUssQ0FBQztNQUNGLFFBQVEsRUFBQyxRQUFRO01BQ2pCLE9BQU8sRUFBQyxDQUFDLEdBSVo7TUZ0QkwsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsSUFBSTtRRXRCakMsQUFzQ0csa0JBdENJLENBc0NKLEtBQUssQ0FBQztVQUlFLGFBQWEsRUFBRSxLQUFLLEdBRTNCO0lBNUNKLEFBNkNHLGtCQTdDSSxDQTZDSixPQUFPLEFBQUEsT0FBTyxDQUFDO01BQ1gsS0FBSyxFQUFFLElBQUk7TUFDWCxjQUFjLEVBQUUsU0FBUztNQUN6QixZQUFZLEVEakRaLE9BQU87TUNrRFAsZ0JBQWdCLEVEbERoQixPQUFPLEdDd0RWO01BdkRKLEFGNEJKLGtCRTVCVyxDQTZDSixPQUFPLEFBQUEsT0FBTyxBRmpCcEIsTUFBTSxFRTVCSCxrQkFBTyxDQTZDSixPQUFPLEFBQUEsT0FBTyxBRmpCWCxPQUFPLEVFNUJiLGtCQUFPLENBNkNKLE9BQU8sQUFBQSxPQUFPLEFGakJELE1BQU0sQ0FBQztRRXVCWixLQUFLLEVBQUUsSUFBSTtRQUNYLFlBQVksRUFBRSxPQUFzQjtRQUNwQyxnQkFBZ0IsRUFBRSxPQUFzQixHRnZCdEQifQ== */
